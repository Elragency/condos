import t from"../lib/format-bytes.js";import o from"files-pipe/dist/lib/deepmerge.js";import i from"files-pipe/dist/options/index.js";import r from"./css.js";import s from"./html.js";import f from"./img.js";import m from"./js.js";import p from"./map.js";import a from"./svg.js";var B=o(i,{css:r,html:s,js:m,img:f,svg:a,map:p,pipe:{failed:async e=>`Error: Cannot compress file ${e.inputPath}!`,passed:async e=>e.fileSizeBefore>Buffer.byteLength(e.buffer.toString()),accomplished:async e=>`Compressed ${e.inputPath} for ${await t(e.fileSizeBefore-e.fileSizeAfter)} (${((e.fileSizeBefore-e.fileSizeAfter)/e.fileSizeBefore*100).toFixed(2)}% reduction) in ${e.outputPath}.`,changed:async e=>(e.info.total=(e.info.total?e.info.total:0)+(e.ongoing.fileSizeBefore-e.ongoing.fileSizeAfter),e)}});export{B as default};
